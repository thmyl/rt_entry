import numpy as np
import matplotlib.pyplot as plt

plt.rcParams['font.family'] = 'Times New Roman'

# 数据集名称
datasets = ['SIFT1M', 'crawl']
# colors = ['#1F77B4', '#FF7F0E', '#2CA02C', '#D62728', '#9467BD', '#8C564B']
colors = [ '#EE822F', '#F2BA02','#4874CB', '#75BD42']
markers = ['^', 'v', 'o', 's', 'D', '*']

# pca + rt
sift1M_96_x = [0.84439, 0.90566, 0.93837, 0.95567, 0.96743, 0.97560, 0.98116, 0.98509, 0.98793, 0.99004, 0.99168, 0.99310]
sift1M_96_y = [3.88410, 4.63444, 5.47390, 6.16302, 7.00369, 7.75909, 8.52858, 9.33510, 10.24910, 11.00830, 11.85680, 12.61620]

sift1M_64_x = [0.84247, 0.90075, 0.93310, 0.95195, 0.96519, 0.97404, 0.97968, 0.98374, 0.98678, 0.98916, 0.99092, 0.99231]
sift1M_64_y = [2.23778, 2.57534, 3.04909, 3.48652, 3.88352, 4.36057, 4.76598, 5.18422, 5.71421, 6.13931, 6.59281, 7.03471]

sift1M_32_x = [0.77849, 0.84338, 0.88027, 0.90339, 0.91831, 0.92793, 0.93450, 0.93950, 0.94272, 0.94567, 0.94765, 0.94958]
sift1M_32_y = [1.90007, 2.12132, 2.42937, 2.75758, 3.10226, 3.42173, 3.67727, 3.99137, 4.29582, 4.62969, 4.88938, 5.16855]

crawl_192_x = [0.77513, 0.81431, 0.84197, 0.88026, 0.90190, 0.91861, 0.92982, 0.93882, 0.94503, 0.95478, 0.96394, 0.97243, 0.97696, 0.98013]
crawl_192_y = [15.21910, 16.34050, 18.07560, 21.71880, 25.23730, 28.99320, 32.51060, 36.31680, 39.92570, 47.37680, 58.83500, 77.82110, 97.18570, 116.76400]

crawl_160_x = [0.78340, 0.82262, 0.84934, 0.88640, 0.90731, 0.92148, 0.93184, 0.94044, 0.94642, 0.95505, 0.96358, 0.97086, 0.97489, 0.97774]
crawl_160_y = [12.28530, 13.76210, 15.11970, 18.12820, 21.05110, 24.10450, 27.01790, 30.15760, 33.13420, 39.26770, 48.58690, 64.19670, 80.24820, 95.97280]

crawl_128_x = [0.79055, 0.82605, 0.85104, 0.88415, 0.90421, 0.91818, 0.92818, 0.93604, 0.94207, 0.95010, 0.95798, 0.96420, 0.96748, 0.96939]
crawl_128_y = [9.66535, 10.71550, 11.88460, 14.17520, 16.38640, 18.74630, 20.95950, 23.32840, 25.58140, 30.27530, 37.49630, 49.43330, 61.53190, 73.89610]

crawl_96_x = [0.78434, 0.81792, 0.84182, 0.87374, 0.89177, 0.90444, 0.91221, 0.91805, 0.92194, 0.92782, 0.93250, 0.93628, 0.93847, 0.93995]
crawl_96_y = [7.45459, 8.22818, 9.05536, 10.72960, 12.34370, 14.02220, 15.72800, 17.44440, 19.12150, 22.53570, 27.78340, 36.60790, 45.51470, 54.61010]


crawl_x = np.arange(0.000256, 0.0501, 0.001)
crawl_y = [0.92219, 0.92076, 0.91990, 0.91955, 0.91994, 0.92023, 0.91979, 0.91978, 0.91873, 0.91838, 0.91890, 0.91829, 0.91861, 0.91875, 0.91904, 0.91867, 0.91669, 0.91661, 0.91653, 0.91690, 0.91694, 0.91653, 0.91700, 0.91644, 0.91644, 0.91681, 0.91629, 0.91689, 0.91664, 0.91661, 0.91608, 0.91548, 0.91443, 0.91395, 0.91368, 0.91396, 0.91387, 0.91399, 0.91433, 0.91398, 0.91407, 0.91413, 0.91386, 0.91416, 0.91430, 0.91373, 0.91419, 0.91425, 0.91400, 0.91381]

deep1M_x = np.arange(0.000128, 0.0501, 0.001)
deep1M_y = [0.93097, 0.92894, 0.92932, 0.92931, 0.92788, 0.92785, 0.92786, 0.92785, 0.92775, 0.92781, 0.92787, 0.92769, 0.92780, 0.92778, 0.92782, 0.92782, 0.92605, 0.92607, 0.92598, 0.92605, 0.92590, 0.92601, 0.92604, 0.92596, 0.92597, 0.92599, 0.92601, 0.92601, 0.92604, 0.92602, 0.92594, 0.92524, 0.92505, 0.92495, 0.92504, 0.92507, 0.92497, 0.92495, 0.92496, 0.92504, 0.92504, 0.92504, 0.92499, 0.92500, 0.92500, 0.92502, 0.92504, 0.92506, 0.92509, 0.92499]

deep10M_x = np.arange(0.0000512, 0.0501, 0.001)
deep10M_y = [0.92442, 0.92085, 0.91994, 0.91993, 0.92005, 0.91966, 0.91992, 0.91974, 0.91804, 0.91814, 0.91830, 0.91794, 0.91805, 0.91796, 0.91812, 0.91798, 0.91583, 0.91606, 0.91595, 0.91570, 0.91592, 0.91598, 0.91583, 0.91608, 0.91577, 0.91608, 0.91566, 0.91580, 0.91586, 0.91590, 0.91599, 0.91648, 0.91373, 0.91376, 0.91371, 0.91379, 0.91378, 0.91370, 0.91394, 0.91383, 0.91377, 0.91364, 0.91366, 0.91386, 0.91379, 0.91364, 0.91379, 0.91389, 0.91378, 0.91374, 0.91376]

# 数据
all_groups = [
    # 第一组数据
    (sift1M_96_x, sift1M_96_y),
    (sift1M_64_x, sift1M_64_y),
    (sift1M_32_x, sift1M_32_y),
    # 第二组数据
    (crawl_192_x, crawl_192_y),
    # (crawl_160_x, crawl_160_y),
    (crawl_128_x, crawl_128_y),
    (crawl_96_x, crawl_96_y),
]

legend_labels = [
    [r"$d'=96$", r"$d'=64$", r"$d'=32$"],
    [r"$d'=192$", r"$d'=128$", r"$d'=96$"],
]


# 创建 1 行 2 列的子图布局
row_sz = 1
col_sz = 2
fig, axs = plt.subplots(row_sz, col_sz, figsize=(20, 7))
plt.rcParams.update({'font.size': 30})  # 所有文字统一为16号字体
sz = 40
line_w=3
marker_sz=8

# 绘制每组数据

######## 0 #######################################################################################################
subplot_id = 0
for i, (x_data, y_data) in enumerate(all_groups[:3]): 
    row = subplot_id // col_sz  # 计算行位置
    col = subplot_id % col_sz   # 计算列位置
    x_data = np.array(x_data)
    y_data = np.log10(10000000/np.array(y_data))
    # y_log = np.log10(y_data)
    axs[col].plot(x_data, y_data, color=colors[i % len(colors)], marker=markers[i % len(markers)], linewidth=line_w, markersize=marker_sz, label=legend_labels[subplot_id][i])

    # x
    axs[col].set_xlabel('Recall', fontsize=sz)

    # y
    axs[col].tick_params(axis='both', labelsize=sz-5)  # ✅ 添加这行，控制坐标刻度大小

    axs[col].set_title(datasets[subplot_id], fontsize=sz)
    axs[col].set_ylabel('log$_{10}$(QPS)', fontsize=sz)
    axs[col].grid(True, linestyle='--')
    legend = axs[col].legend(framealpha=1.0) #背景不透明
    legend.get_frame().set_facecolor('white')
    legend.get_frame().set_boxstyle('square')

####### 1 ########################################################################################################
subplot_id = subplot_id + 1
for i, (x_data, y_data) in enumerate(all_groups[3:6]):
    row = subplot_id // col_sz  # 计算行位置
    col = subplot_id % col_sz   # 计算列位置
    x_data = np.array(x_data)
    y_data = np.log10(10000000/np.array(y_data))
    # y_log = np.log10(y_data)
    axs[col].plot(x_data, y_data, color=colors[i % len(colors)], marker=markers[i % len(markers)], linewidth=line_w, markersize=marker_sz, label=legend_labels[subplot_id][i])
    # x
    axs[col].set_xlabel('Recall', fontsize=sz)

    # y
    axs[col].tick_params(axis='both', labelsize=sz-5)

    axs[col].set_title(datasets[subplot_id], fontsize=sz)
    # axs[row, col].set_ylabel('', fontsize=sz)
    axs[col].grid(True, linestyle='--')
    legend = axs[col].legend(framealpha=1.0) #背景不透明
    legend.get_frame().set_facecolor('white')
    legend.get_frame().set_boxstyle('square')


# 调整布局
plt.tight_layout()
# fig.legend(width, loc='upper center', bbox_to_anchor=(0.5, 1.05), ncol=6, frameon=False, fontsize=sz-5)
plt.show()
plt.savefig("./img/1x2.png", format="png", bbox_inches="tight")
print("图像已保存到文件：./img/1x2.png")
plt.savefig("./img/1x2.pdf", format="pdf", bbox_inches="tight")
print("图像已保存到文件：./img/1x2.pdf")
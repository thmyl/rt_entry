import numpy as np
import matplotlib.pyplot as plt


# search width = 1
naive_width1_x = [
    44.96, 72.61, 83.12, 88.36, 91.56, 93.56, 94.99, 95.99, 96.73,
    97.29, 97.70, 98.03, 98.34, 98.40, 98.40
]
naive_width1_y = [
    3058543.583, 1913652.186, 1394297.602, 1101907.733, 902958.9966, 766518.4731,
    664284.101, 585435.5348, 523480.7281, 473036.8969, 432183.8683, 396680.5769,
    366101.8935, 358833.2179, 359842.9645
]

naive_rt_width1_x = [
    53.22, 75.21, 84.21, 89.03, 91.88, 93.81, 95.11, 96.08, 96.81,
    97.34, 97.73, 98.05, 98.34, 98.40, 98.40
]
naive_rt_width1_y = [
    3120514.261, 1967330.51, 1423984.165, 1124156.321, 913108.5869, 777073.2314,
    670385.0692, 590709.3238, 526432.1587, 476764.8643, 435246.2406, 399378.5669,
    368902.9564, 363314.005, 365356.8623
]

pca64_width1_x = [
    44.74, 72.47, 82.65, 88.03, 91.25, 93.29, 94.76, 95.77, 96.50,
    97.05, 97.48, 97.86, 98.15, 98.22, 98.23
]
pca64_width1_y = [
    5088178.127, 3445816.262, 2609984.758, 2085636.223, 1731355.894, 1475017.626,
    1297816.424, 1152739.081, 1031453.132, 936610.2203, 857015.5291, 788967.0843,
    724086.7456, 713114.1696, 710984.7138
]

pca64_rt_width1_x = [
    52.54, 74.47, 83.70, 88.63, 91.67, 93.56, 94.91, 95.88, 96.60,
    97.12, 97.57, 97.93, 98.20, 98.23, 98.24
]
pca64_rt_width1_y = [
    5535903.1, 3609183.206, 2672924.875, 2144068.542, 1757911.039, 1506893.283,
    1324850.756, 1160444.172, 1045455.353, 944135.5023, 868130.9141, 797836.268,
    738617.8982, 722433.7348, 722282.4124
]

####################################################################################
# search_width = 4 
naive_width4_x = [
    56.51, 75.05, 83.50, 88.00, 90.80, 92.72, 94.15, 95.20, 95.97,
    96.58, 97.07, 97.46, 97.78, 98.03, 98.24
]
naive_width4_y = [
    1643931.1, 1330181.69, 1108963.419, 954653.9379, 836519.0768, 743914.7771,
    667280.5648, 605939.4182, 553774.2484, 510443.6776, 472101.1807, 440311.3882,
    410232.8482, 386451.027, 361842.9385
]

naive_rt_width4_x = [
    69.77, 80.49, 86.20, 89.58, 91.82, 93.45, 94.67, 95.58, 96.29,
    96.85, 97.30, 97.62, 97.90, 98.14, 98.34
]
naive_rt_width4_y = [
    1726012.738, 1379599.585, 1143164.164, 979010.0251, 853140.4098, 755229.9675,
    674367.9486, 612085.0064, 559985.6644, 514967.5313, 476990.0023, 445235.9751,
    413407.6365, 387473.7487, 369321.2245
]

pca64_width4_x = [
    56.28, 74.56, 83.07, 87.59, 90.58, 92.50, 93.90, 94.95, 95.75,
    96.37, 96.84, 97.25, 97.58, 97.87, 98.13
]
pca64_width4_y = [
    2975942.481, 2454011.819, 2072087.939, 1796377.067, 1581692.854, 1414543.202,
    1274614.397, 1164669.065, 1065224.778, 984688.1, 915055.4066, 853664.7829,
    796210.0402, 749833.1621, 708727.2676
]

pca64_rt_width4_x = [
    69.49, 80.11, 85.77, 89.22, 91.54, 93.20, 94.44, 95.36, 96.06,
    96.63, 97.05, 97.40, 97.73, 98.02, 98.22
]
pca64_rt_width4_y = [
    3191014.104, 2538547.849, 2138456.505, 1849806.788, 1615221.851, 1453469.359,
    1306991.358, 1188922.099, 1087436.412, 1002812.89, 925771.6307, 867212.4324,
    806614.2367, 759289.9121, 722532.9114
]

####################################################################################

ggnn_x = [
    75.30, 80.77, 84.88, 87.76, 89.47, 90.98, 92.13, 93.82,
    94.97, 96.15, 97.02, 97.94, 98.48, 99.04, 99.28
]
ggnn_y = [
    752972.3584, 635319.9789, 558659.2179, 512820.5128, 465116.2791,
    434782.6087, 392156.8627, 336831.8939, 307068.722, 268515.4853,
    246445.6378, 206185.567, 186087.018, 161279.3972, 140530.7566
]


ganns_x = [
    64.08, 73.42, 79.41, 83.59, 86.45, 88.72, 90.35, 91.71, 92.81,
    93.64, 94.43, 95.11, 95.59, 96.02, 96.40, 96.74, 97.05, 97.29,
    97.53, 97.72, 97.88, 98.05, 98.20, 98.33, 98.38, 98.39, 98.39
]
ganns_y = [
    1080380.294, 964413.1546, 869565.2174, 797575.3709, 724165.3994,
    685824.0176, 639672.4877, 586029.067, 548877.5454, 523834.4683,
    496327.1789, 465246.1152, 447047.2529, 426039.5365, 405334.198,
    385074.5119, 371830.148, 354358.6109, 341705.1085, 328979.8335,
    320348.5392, 306861.4214, 296507.1458, 288666.9361, 287075.8454,
    284884.0522, 286000.286
]




# 放入列表，便于遍历
all_groups = [
    # (naive_width1_x, naive_width1_y),
    # (naive_rt_width1_x, naive_rt_width1_y),
    # (pca64_width1_x, pca64_width1_y),
    # (pca64_rt_width1_x, pca64_rt_width1_y),
    (naive_width4_x, naive_width4_y),
    (naive_rt_width4_x, naive_rt_width4_y),
    (pca64_width4_x, pca64_width4_y),
    (pca64_rt_width4_x, pca64_rt_width4_y),
    (ggnn_x, ggnn_y),
    (ganns_x, ganns_y),
]

plt.figure(figsize=(8, 6))

for i, (x, y) in enumerate(all_groups):
    x = np.array(x)
    y = np.array(y)
    
    # 过滤掉 <= 0 的 y 值，避免 log10 出错
    mask = y > 0
    x = x[mask]
    y = y[mask]
    
    y_log = np.log10(y)
    plt.plot(x, y_log, marker='o', label=f'Group {i+1}')

plt.xlabel('Recall')
plt.ylabel('log10(QPS)')
plt.title('SIFT1M')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
plt.savefig("./img/sift10M.png", format="png", bbox_inches="tight")
print("图像已保存到文件：./img/sift10M.png")
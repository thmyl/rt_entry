import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker


# search width = 1
naive_width1_x = [60.68, 83.19, 90.79, 94.20, 96.12, 97.37, 98.16, 98.61, 98.92, 99.15, 99.32, 99.45]
naive_width1_y = [3820629.105, 2484644.895, 1832015.198, 1447203.135, 1198829.463, 1016385.145,
    880607.2668, 777194.0187, 693866.2226, 628172.27, 571941.6848, 527545.8042]

naive_rt_width1_x = [67.62, 84.96, 91.64, 94.61, 96.46, 97.52, 98.24, 98.64, 98.95, 99.17, 99.33, 99.46]
naive_rt_width1_y = [3591773.402, 2411184.036, 1785035.335, 1415897.127, 1176065.192, 1003944.498,
    871042.202, 769793.3105, 687634.9484, 624126.2233, 565639.6536, 521004.2879]

pca64_width1_x = [60.44, 82.58, 90.23, 93.89, 95.95, 97.21, 97.97, 98.45, 98.79, 99.05, 99.24, 99.37]
pca64_width1_y = [7328638.119, 5060959.254, 3883857.136, 3117090.383, 2630969.67, 2258228.42,
    1986957.61, 1772892.474, 1596546.351, 1448553.185, 1322114.749, 1225650.913]

pca64_rt_width1_x = [67.07, 84.43, 90.95, 94.23, 96.15, 97.30, 98.02, 98.47, 98.81, 99.07, 99.23, 99.38]
pca64_rt_width1_y = [6927270.586, 4783887.866, 3775921.702, 3074189.413, 2581704.493, 2227315.35,
    1935351.518, 1719634.268, 1556863.667, 1416256.07, 1309567.306, 1211249.113]

###############################################################################################################
# search_width = 4
naive_width4_x = [76.96, 87.30, 92.05, 94.52, 96.07, 97.16, 97.87, 98.32, 98.67, 98.93, 99.12, 99.26]
naive_width4_y = [2161961.158, 1767037.332, 1483725.754, 1283308.266, 1127499.949, 998512.2168,
    898044.9561, 818665.5751, 747160.789, 687710.6114, 637563.9955, 594388.9681]

naive_rt_width4_x = [84.42, 90.39, 93.61, 95.50, 96.73, 97.54, 98.12, 98.53, 98.82, 99.04, 99.20, 99.33]
naive_rt_width4_y = [2151625.015, 1761611.663, 1460845.684, 1271907.008, 1110128.031, 995936.5788,
    891043.2334, 812281.6993, 740976.7556, 682654.4335, 630890.9442, 587699.4505]

pca64_width4_x = [76.42, 86.87, 91.55, 94.21, 95.87, 96.95, 97.67, 98.16, 98.53, 98.79, 98.99, 99.17]
pca64_width4_y = [4662874.196, 3943715.295, 3379622.902, 2974623.487, 2622132.37, 2364082.96,
    2140136.113, 1955883.101, 1792606.216, 1665575.715, 1544847.701, 1443418.014]

pca64_rt_width4_x = [84.25, 90.07, 93.30, 95.19, 96.51, 97.40, 97.97, 98.37, 98.68, 98.92, 99.09, 99.23]
pca64_rt_width4_y = [4468714.53, 3882982.441, 3279667.048, 2868189.484, 2574983.52, 2293278.172,
    2098204.357, 1928930.485, 1750023.188, 1628847.541, 1516803.912, 1421522.707]


###############################################################################################################
ggnn_x = [73.61, 78.34, 83.73, 87.36, 89.63, 90.74, 91.74, 92.65, 94.20, 95.69, 96.68, 97.38, 98.06, 98.66, 99.02, 99.25, 99.55]
ggnn_y = [995024.8756, 980392.1569, 909090.9091, 833333.3333, 757575.7576,
    729927.0073, 689655.1724, 662708.0903, 598802.3952, 555555.5556, 520833.3333,
    471504.6184, 407051.7648, 370148.2814, 333658.0939, 319626.676, 275492.7187]

ganns_x = [76.71, 84.04, 88.41, 91.25, 93.23, 94.56, 95.60, 96.40, 97.03,
    97.55, 97.93, 98.23, 98.48, 98.67, 98.82, 98.95, 99.08, 99.17,
    99.26, 99.34, 99.41, 99.46, 99.53, 99.56, 99.56, 99.56, 99.56]
ganns_y = [1217581.882, 1103996.467, 1009081.736, 926097.4254, 869489.6096, 816459.8302,
    756715.8532, 712149.2665, 668627.9754, 635889.6096, 601829.5619, 570874.0081,
    546866.4552, 522848.4785, 501932.4399, 482905.1574, 463456.4583, 441579.0868,
    423137.1387, 410812.5873, 398247.7101, 383273.9259, 365871.5059, 360295.4423,
    366327.2035, 363940.7504, 365003.4675]



# 放入列表，便于遍历
all_groups = [
    # (naive_width1_x, naive_width1_y),
    # (naive_rt_width1_x, naive_rt_width1_y),
    # (pca64_width1_x, pca64_width1_y),
    # (pca64_rt_width1_x, pca64_rt_width1_y),
    (naive_width4_x, naive_width4_y),
    (naive_rt_width4_x, naive_rt_width4_y),
    (pca64_width4_x, pca64_width4_y),
    (pca64_rt_width4_x, pca64_rt_width4_y),
    (ggnn_x, ggnn_y),
    (ganns_x, ganns_y),
]

colors = ['#598865', '#9fa167', '#e85d04', '#eeba0b', '#6a605c', '#215a84']
markers = ['o', 's', '^', 'v', 'D', '*']


plt.figure(figsize=(8, 6))
plt.rcParams.update({'font.size': 16})  # 所有文字统一为16号字体

for i, (x, y) in enumerate(all_groups):
    x = np.array(x) * 0.01
    y = np.array(y)
    
    # 过滤掉 <= 0 的 y 值，避免 log10 出错
    mask = y > 0
    x = x[mask]
    y = y[mask]
    
    y_log = np.log10(y)
    plt.plot(x, y_log, marker=markers[i % len(markers)], color=colors[i % len(colors)], label=f'Group {i+1}')

plt.xlim(0.85, 1)
plt.xticks([0.85, 0.90, 0.95, 1.0])
plt.xlabel('Recall')


### y 轴刻度设置

# 设置主刻度位置与标签
main_qps = [5e5, 1e6, 5e6]
main_qps_log = np.log10(main_qps)
main_labels = [r'$5\times10^5$', r'$1\times10^6$', r'$5\times10^6$']

# 设置副刻度位置（不加标签）
minor_qps = [2e5, 3e5, 4e5, 6e5, 7e5, 8e5, 9e5, 2e6, 3e6, 4e6]
minor_qps_log = np.log10(minor_qps)

ax = plt.gca()
ax.set_yticks(main_qps_log)  # 主刻度
ax.set_yticklabels(main_labels)
ax.set_yticks(minor_qps_log, minor=True)  # 副刻度

# 控制主副刻度样式
ax.tick_params(axis='y', which='major', length=6, width=1.5)  # 主刻度稍大
ax.tick_params(axis='y', which='minor', length=4, width=0.8)  # 副刻度短细

plt.ylabel('Queries per Second')

### end of yticks

plt.title('SIFT1M')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
plt.savefig("./img/sift1M.png", format="png", bbox_inches="tight")
print("图像已保存到文件：./img/sift1M.png")